{"version":3,"sources":["redux/selectTodos.js","redux/selectFilters.js","redux/actionTypes.js","redux/actions.js","components/App/AddTodo.js","components/App/Template.js","components/App/App.js","components/App/index.js","redux/reducers/todos.js","redux/reducers/filters.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["selectTodos","store","todos","selectFilters","filters","ADD_TODO","DELETE_TODO","TOGGLE_TODO","COMPLETE_ALL","CLEAR_COMPLETED","EDITING_TODO","CHANGE_TODO","CHANGE_STATUS","addTodo","name","type","payload","changeStatus","filterValue","editingTodo","id","AddItem","styled","div","AddInput","input","AddButton","AddTodo","dispatch","useDispatch","useState","value","setValue","onChange","e","target","onKeyPress","key","onClick","StyledItem","Checkbox","Btn","Btns","TodoContent","Template","todo","newContent","setNewContent","viewTemplate","checked","completed","editingTemplate","placeholder","editing","Container","Title","h4","Itemslist","RateOfDone","Line","FilterBtns","Button","selectNumOfDoneTodos","createSelector","filter","length","selectNumOfAllTodos","rateOfDone","done","all","Math","floor","Number","selectCompleteTodos","selectActiveTodos","DoneTodosCounter","rateOfDoneTodos","useSelector","App","ActiveTodos","map","CompletedTodos","status","todoId","initialState","state","toLowerCase","includes","combineReducers","action","console","log","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ad34f0d.chunk.js","sourcesContent":["// 避免每個地方都寫成這樣會太長\r\nexport const selectTodos = (store) => store.todos.todos;\r\n","export const selectFilters = (store) => store.filters;\r\n","// 避免打錯字\r\nexport const ADD_TODO = 'add_todo';\r\nexport const DELETE_TODO = 'delete_todo';\r\nexport const TOGGLE_TODO = 'toggle_todo';\r\nexport const COMPLETE_ALL = 'complete_all';\r\nexport const CLEAR_COMPLETED = 'clear_completed';\r\nexport const EDITING_TODO = 'editing_todo';\r\nexport const CHANGE_TODO = 'change_todo';\r\n\r\nexport const CHANGE_STATUS = 'change_status';\r\n","import { ADD_TODO, DELETE_TODO, TOGGLE_TODO, COMPLETE_ALL, CLEAR_COMPLETED, CHANGE_STATUS, EDITING_TODO, CHANGE_TODO } from \"./actionTypes\";\r\n\r\n// action creator，不用每次都打很多字\r\nexport function addTodo(name) {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload: {\r\n      name,\r\n    },\r\n  };\r\n}\r\n\r\nexport function deleteTodo(id) {\r\n  return {\r\n    type: DELETE_TODO,\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n}\r\n\r\nexport function toggleTodo(id) {\r\n  return {\r\n    type: TOGGLE_TODO,\r\n    payload: {\r\n      id, \r\n    }\r\n  }\r\n}\r\n\r\nexport function completeAll() {\r\n  return {\r\n    type: COMPLETE_ALL,\r\n  }\r\n}\r\n\r\nexport function clearCompleted() {\r\n  return {\r\n    type: CLEAR_COMPLETED,\r\n  }\r\n}\r\n\r\nexport function changeStatus(filterValue) {\r\n  return {\r\n    type: CHANGE_STATUS,\r\n    payload: {\r\n      filterValue\r\n    }\r\n  }\r\n}\r\n\r\nexport function editingTodo(id) {\r\n  return {\r\n    type: EDITING_TODO,\r\n    payload: {\r\n      id,\r\n    },\r\n  };\r\n}\r\n\r\nexport function changeTodo(id, value) {\r\n  return {\r\n    type: CHANGE_TODO,\r\n    payload: {\r\n      id,\r\n      value,\r\n    },\r\n  };\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { selectTodos } from \"../../redux/selectTodos\";\nimport { useState, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { addTodo } from \"../../redux/actions\";\n\nconst AddItem = styled.div`\n  margin: 16px 0;\n  vertical-align: sub;\n`;\n\nconst AddInput = styled.input`\n  border: solid 1px #cacece;\n  border-radius: 5px;\n  width: 70%;\n  height: 30px;\n  font-size: 16px;\n  padding: 10px;\n  display: inline-block;\n\n  &:focus {\n    outline: #aaa auto 1px;\n  }\n`;\n\nconst AddButton = styled.div`\n  box-sizing: border-box;\n  margin-left: 10px;\n  width: 30px;\n  height: 30px;\n  padding: 6px;\n  font-size: 18px;\n  color: #555;\n  text-align: center;\n  cursor: default;\n  display: inline-block;\n\n  &:hover {\n    background-color: #ddd;\n    border-radius: 50%;\n  }\n`;\n\n// dumb component/component，不知道 redux 的存在\nexport default function AddTodo() {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      if (!value) return \n      dispatch(addTodo(value));\n      setValue(\"\");\n    }\n  };\n\n  const handleAddButtonClick = () => {\n    if (!value) return \n    dispatch(addTodo(value));\n    setValue(\"\");\n  };\n\n  return (\n    <>\n      <AddItem>\n        <AddInput\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n          onKeyPress={handleKeyPress}\n        />\n        <AddButton onClick={handleAddButtonClick}>+</AddButton>\n      </AddItem>\n    </>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectTodos } from '../../redux/selectTodos';\nimport { useState, Fragment } from \"react\";\nimport styled from 'styled-components';\nimport { changeTodo, editingTodo, deleteTodo, toggleTodo } from \"../../redux/actions\";\n\nconst StyledItem = styled.div`\n  margin-bottom: 20px;\n  color: #555;\n  overflow: hidden;\n  display: flex;\n  justify-content: space-between;\n  align-item: center;\n`;\n\nconst Checkbox = styled.input`\n  padding: 10px;\n  appearance: none;\n  background-color: #fff;\n  border: 1px solid #cacaca;\n  border-radius: 3px;\n  display: inline-block;\n  position: relative;\n  margin-right: 15px;\n  margin-bottom: -2px;\n  letter-spacing: 1.5px;\n\n  &:active {\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05),\n      inset 0px 1px 3px rgba(0, 0, 0, 0.1);\n    border: solid 1px #cacaca;\n  }\n\n  &:checked {\n    background-color: #fefefe;\n    border: 1px solid #cacaca;\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05),\n      inset 0px -15px 10px -12px rgba(0, 0, 0, 0.05),\n      inset 15px 10px -12px rgba(255, 255, 255, 0.1);\n    color: #555;\n\n    &:active {\n      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05),\n        inset 0px 1px 3px rgba(0, 0, 0, 0.1);\n      border: solid 1px #cacaca;\n    }\n\n    &:after {\n      content: \"\\u2714\";\n      font-size: 20px;\n      position: absolute;\n      top: -5px;\n      left: 3px;\n      color: #555;\n    }\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Btn = styled.div`\n  color: #888;\n  font-size: 14px;\n  cursor: default;\n  margin-left: 10px;\n  font-family: \"微軟正黑體\";\n\n  &:hover {\n    color: #333;\n  }\n`;\n\nconst Btns = styled.div`\n  display: flex;\n`;\n\nconst TodoContent = styled.div`\n  width: 280px;\n  overflow-wrap: break-word;\n  & input {\n    border: solid 1px #cacece;\n    height: 20px;\n    color: #555;\n\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nexport default function Template({ todo }) {\n  const dispatch = useDispatch();\n  const [newContent, setNewContent] = useState('');\n\n  const viewTemplate = (\n    <StyledItem>\n      <TodoContent>\n        <Checkbox type=\"checkbox\" id={todo.id} checked={todo.completed} onChange={() => dispatch(toggleTodo(todo.id))}/>\n        {todo.name}\n      </TodoContent>\n      <Btns>\n        <Btn onClick={() => dispatch(editingTodo(todo.id))}>\n          Edit\n        </Btn>\n        <Btn onClick={() => dispatch(deleteTodo(todo.id))}>\n          Delete\n        </Btn>\n      </Btns>\n    </StyledItem>\n  )\n\n  const editingTemplate = (\n    <StyledItem>\n      <TodoContent>\n        <input id={todo.id} onChange={e => setNewContent(e.target.value)} placeholder={todo.name} />\n      </TodoContent>\n      <Btns>\n        <Btn onClick={\n          () => {\n            if (!newContent) {\n              dispatch(editingTodo(todo.id))\n            } else {\n              dispatch(changeTodo(todo.id, newContent))\n            }\n          }\n        }>\n          save\n        </Btn>\n        <Btn onClick={() => dispatch(editingTodo(todo.id))}>\n          cancel\n        </Btn>\n      </Btns>\n    </StyledItem>\n  )\n  return (\n    todo.editing ? editingTemplate : viewTemplate\n  )\n}\n\n\n\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createSelector } from 'reselect';\nimport styled from 'styled-components';\nimport { selectTodos } from \"../../redux/selectTodos\";\nimport { selectFilters } from \"../../redux/selectFilters\";\nimport AddTodo from \"./AddTodo\";\nimport Template from \"./Template\";\nimport { deleteTodo, addTodo, toggleTodo, completeAll, clearCompleted, changeStatus, editingTodo, changeTodo } from \"../../redux/actions\";\n\nconst Container = styled.div`\n  width: 400px;\n  min-height: 120px;\n  background-color: #fff;\n  margin: 50px auto;\n  border-radius: 16px;\n  padding: 40px 40px 5px 40px;\n  box-shadow: 0 0 10px 5px rgba(0, 0, 0, 0.1);\n`;\n\nconst Title = styled.h4`\n  font-family: \"Mukta\", sans-serif;\n  font-weight: 400;\n  font-size: 20px;\n  color: #333;\n  margin-bottom: 30px;\n  letter-spacing: 1.5px;\n  text-align: left;\n`;\n\nconst Itemslist = styled.div`\n  margin-top: 50px;\n  width: 100%;\n`;\n\nconst RateOfDone = styled.div`\n  margin: 30px 0 10px 0;\n  color: #888;\n`;\n\nconst Line = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: #ddd;\n  margin-bottom: 5px;\n`;\n\nconst Btns = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nconst FilterBtns = styled.div`\n  display: flex;\n`;\n\nconst Button = styled.div`\n  padding: 5px;\n  color: #888;\n  cursor: default;\n  font-size: 14px;\n\n  &:hover {\n    color: #333;\n  }\n`\n\nconst selectNumOfDoneTodos = createSelector(\n  selectTodos,\n  (todos) => todos.filter((todo) => todo.completed).length\n)\n\nconst selectNumOfAllTodos = createSelector(\n  selectTodos,\n  (todos) => todos.length\n)\n\nconst rateOfDone = createSelector(\n  selectNumOfDoneTodos,\n  selectNumOfAllTodos,\n  (done, all) => Math.floor((Number(done) /Number(all)) * 100)\n)\n\nconst selectCompleteTodos = createSelector(\n  selectTodos,\n  (todos) => todos.filter((todo) => todo.completed)\n)\n\nconst selectActiveTodos = createSelector(\n  selectTodos,\n  (todos) => todos.filter((todo) => !todo.completed)\n)\n\nconst DoneTodosCounter = () => {\n  const rateOfDoneTodos = useSelector(rateOfDone)\n  return <span>{rateOfDoneTodos}</span>\n}\n\n\nfunction App() {\n  // useSelector(store => store.todos.todos)\n  const todos = useSelector(selectTodos);\n  const filters = useSelector(selectFilters);\n  const dispatch = useDispatch();\n  const [newContent, setNewContent] = useState('');\n\n  const ActiveTodos = () => {\n    const activeTodos = useSelector(selectActiveTodos)\n    return activeTodos.map((todo) => <Template todo={todo} />)\n  }\n\n  const CompletedTodos = () => {\n    const completedTodos = useSelector(selectCompleteTodos)\n    return completedTodos.map((todo) => <Template todo={todo} />)\n  }\n\n  return (\n    <Container>\n      <Title>Todo List</Title>\n      <AddTodo />\n      <Itemslist>\n        {filters.status === 'all' \n          && todos.map((todo) => <Template todo={todo} /> )\n        }\n        {filters.status === 'completed' \n          && <CompletedTodos />\n        }\n        {filters.status === 'active' \n          && <ActiveTodos />\n        }\n      </Itemslist>\n      {todos.length > 0 && <RateOfDone>Achievement : <DoneTodosCounter /> %</RateOfDone>}\n      <Line />\n      <Btns>\n        <Button onClick={() => dispatch(completeAll())}>\n          Complete All\n        </Button>\n        <Button onClick={() => dispatch(clearCompleted())}>\n          Clear Completed\n        </Button>\n        <FilterBtns>\n          <Button onClick={() => dispatch(changeStatus('all'))}>\n            All\n          </Button>\n          <Button onClick={() => dispatch(changeStatus('active'))}>\n            Active\n          </Button>\n          <Button onClick={() => dispatch(changeStatus('completed'))}>\n            Completed\n          </Button>  \n        </FilterBtns>\n      </Btns>\n      \n    </Container>\n  );\n}\n\nexport default App;\n","import App from \"./App\";\r\nexport default App;\r\n","import { createSelector } from 'reselect'\r\nimport { ADD_TODO, DELETE_TODO, TOGGLE_TODO, COMPLETE_ALL, CLEAR_COMPLETED, EDITING_TODO, CHANGE_TODO } from \"../actionTypes\";\r\n\r\nlet todoId = 0\r\n\r\n// state 的初始值\r\nconst initialState = {\r\n  todos: []\r\n}\r\n\r\n// 根據 dispatch 發送的 action 去決定要傳回甚麼 state\r\n// state 的值跟 react 一樣 immutable\r\n// reducer 是一個 pure function，接收 state、 action，負責回傳 state，不會去做其他事情\r\nexport default function todosReducer(state = initialState, action) {\r\n  console.log('received action', action)\r\n  switch(action.type) {\r\n    case ADD_TODO: {\r\n      return {\r\n        ...state, // 要這樣寫才能保留原本的 state 然後添加新的東西\r\n        todos: [...state.todos, {\r\n          id: todoId++,\r\n          name: action.payload.name, \r\n          completed: false,\r\n          editing: false\r\n        }]\r\n      }\r\n    }\r\n    case DELETE_TODO: {\r\n      return {\r\n        ...state,\r\n        todos: state.todos\r\n        .filter(todo => todo.id !== action.payload.id)\r\n      }\r\n    }\r\n    case TOGGLE_TODO: {\r\n      return {\r\n        ...state,\r\n        todos: state.todos\r\n        .map(todo => {\r\n          if (todo.id !== action.payload.id) {\r\n            return todo\r\n          }\r\n          return {\r\n            ...todo, \r\n            completed: !todo.completed\r\n          }\r\n        })\r\n      }\r\n    }\r\n    case COMPLETE_ALL: {\r\n      return {\r\n        ...state,\r\n        todos: state.todos\r\n        .map(todo => {\r\n          return {\r\n            ...todo, \r\n            completed: true\r\n          }\r\n        })\r\n      }\r\n    }\r\n    case CLEAR_COMPLETED: {\r\n      // 這樣寫會造成 clear 後，被移除的會被遞補，然後 checkbox 就變成打勾的了，但 log 出來 complete: false，checkbox 好像沒有被連到\r\n      return {\r\n        ...state, \r\n        todos: state.todos\r\n        .filter(todo => todo.completed !== true)\r\n      }\r\n    }\r\n    case EDITING_TODO: {\r\n      return {\r\n        ...state,\r\n        todos: state.todos\r\n        .map(todo => {\r\n          if (todo.id !== action.payload.id) {\r\n            return todo\r\n          }\r\n          return {\r\n            ...todo, \r\n            editing: !todo.editing\r\n          }\r\n        })\r\n      }\r\n    }\r\n    case CHANGE_TODO: {\r\n      return {\r\n        ...state,\r\n        todos: state.todos\r\n        .map(todo => {\r\n          if (todo.id !== action.payload.id) {\r\n            return todo\r\n          }\r\n          return {\r\n            ...todo, \r\n            name: action.payload.value,\r\n            editing: false\r\n          }\r\n        })\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\nconst todoSelector = state => state.todos\r\nexport const todoWithMilk = createSelector(\r\n    [todoSelector],\r\n    todos => {\r\n      return todos.filter(todo => todo.name.toLowerCase().includes('milk'))\r\n    }\r\n  )","import { CHANGE_STATUS } from '../actionTypes'\r\n\r\n// state 的初始值\r\nconst initialState = {\r\n  status: 'all'\r\n}\r\n\r\n// 根據 dispatch 發送的 action 去決定要傳回甚麼 state\r\n// state 的值跟 react 一樣 immutable\r\n// reducer 是一個 pure function，接收 state、 action，負責回傳 state，不會去做其他事情\r\nexport default function filtersReducer(state = initialState, action) {\r\n  switch(action.type) {\r\n    case CHANGE_STATUS: {\r\n      return {\r\n        ...state, // 要這樣寫才能保留原本的 state 然後添加新的東西\r\n        status: action.payload.filterValue\r\n      }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport todos from \"./todos\";\r\nimport filters from \"./filters\";\r\n\r\nexport default combineReducers({\r\n\ttodos: todos,\r\n\tfilters: filters\r\n});\r\n\r\n// store 存的格式\r\n// {\r\n// \ttodos: {\r\n// \t\ttodos: []\r\n// \t},\r\n// \tfilters: {\r\n// \t\t\r\n// \t}\r\n// }","// 引入 rootReducer，傳入 createStore\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// ReactDOM.render(\n//   <Provider store={store} >\n//     <App />\n//   </Provider>\n//   , document.getElementById(\"root\")\n\n// );\n"],"sourceRoot":""}